# -*- coding: utf-8 -*-
"""Concurso Data Mania

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16mLmxOrUn3H4k8hZXGKbo3euBdvkyDU2
"""



# Predicción de número de huevos por semana

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score


df = pd.read_csv ("eggs_data.csv", encoding='UTF-8')

print(df.head())

y = df["eggs"]

X = df[["week", "x", "y"]]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
print("R²:", r2_score(y_test, y_pred))
print("RMSE:", np.sqrt(mean_squared_error(y_test, y_pred)))

plt.scatter(y_test, y_pred, color="skyblue")
plt.xlabel("Huevos reales")
plt.ylabel("Huevos predichos")
plt.title("Predicción de huevos (modelo Random Forest)")
plt.grid(True)
plt.show()

future_weeks = pd.DataFrame({

    "week": [39, 40, 41, 42],

    "x": [-89.560127]*4,   # Repite 4 veces el mismo valor

    "y": [20.968391]*4

})

future_pred = model.predict(future_weeks)
future_weeks["predicted_eggs"] = future_pred
print("\n Predicción de huevos para próximas semanas:")
print(future_weeks)



import matplotlib.pyplot as plt

plt.figure(figsize=(8, 6))
plt.scatter(df["x"], df["y"], c="gray", alpha=0.5, label="Datos históricos")

# Puntos futuros predichos
plt.scatter(future_weeks["x"], future_weeks["y"],
            c=future_weeks["predicted_eggs"], cmap="YlOrRd",
            s=200, edgecolor="black", label="Predicciones futuras")

plt.colorbar(label="Predicción de huevos")
plt.xlabel("Longitud")
plt.ylabel("Latitud")
plt.title("Mapa de predicción de huevos por semana")
plt.legend()
plt.grid(True)
plt.show()

y = df["eggs"]
X = df[["week", "x", "y"]]

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

coords = df[["x", "y"]].drop_duplicates()

# Definición de semanas futuras
future_weeks_list = [39, 40, 41, 42]

future_combinations = pd.DataFrame([
    {"week": week, "x": row.x, "y": row.y}
    for week in future_weeks_list
    for row in coords.itertuples()
])

future_combinations["predicted_eggs"] = model.predict(future_combinations)
print(future_combinations.head())

import folium
from folium import plugins

# Mapa centrado en Valladolid
m = folium.Map(location=[20.968391, -89.560127], zoom_start=12)

# Ejemplo: Semana 39
semana_ejemplo = 39
data_semana = future_combinations[future_combinations["week"] == semana_ejemplo]

for _, row in data_semana.iterrows():
    folium.CircleMarker(
        location=[row["y"], row["x"]],
        radius=6,
        popup=f"Semana {row['week']}<br>Predicción: {row['predicted_eggs']:.1f} huevos",
        color="black",
        fill=True,
        fill_color="orange",
        fill_opacity=0.8
    ).add_to(m)

heat_data = [[row["y"], row["x"], row["predicted_eggs"]] for _, row in data_semana.iterrows()]
plugins.HeatMap(heat_data, radius=20).add_to(m)

m